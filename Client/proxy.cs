//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos.DTO
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDTO", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.DTO", IsReference=true)]
    public partial class LocationDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private System.Nullable<decimal> LatitudeField;
        
        private System.Nullable<decimal> LongitudeField;
        
        private MyPhotos.DTO.MultimediaDTO MultimediaField;
        
        private int MultimediaIdField;
        
        private string NameField;
        
        private string SceneryField;
        
        private string ZipCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.MultimediaDTO Multimedia
        {
            get
            {
                return this.MultimediaField;
            }
            set
            {
                this.MultimediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MultimediaId
        {
            get
            {
                return this.MultimediaIdField;
            }
            set
            {
                this.MultimediaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scenery
        {
            get
            {
                return this.SceneryField;
            }
            set
            {
                this.SceneryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode
        {
            get
            {
                return this.ZipCodeField;
            }
            set
            {
                this.ZipCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaDTO", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.DTO", IsReference=true)]
    public partial class MultimediaDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AdditionalLabelsField;
        
        private System.DateTime DateAddedField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime DateModifiedField;
        
        private bool DeletedField;
        
        private string DescriptionField;
        
        private string EventField;
        
        private int IdField;
        
        private MyPhotos.DTO.LocationDTO[] LocationsField;
        
        private string PathField;
        
        private MyPhotos.DTO.PersonDTO[] PeopleField;
        
        private MyPhotos.DTO.WeatherDTO WeatherField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalLabels
        {
            get
            {
                return this.AdditionalLabelsField;
            }
            set
            {
                this.AdditionalLabelsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded
        {
            get
            {
                return this.DateAddedField;
            }
            set
            {
                this.DateAddedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified
        {
            get
            {
                return this.DateModifiedField;
            }
            set
            {
                this.DateModifiedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.LocationDTO[] Locations
        {
            get
            {
                return this.LocationsField;
            }
            set
            {
                this.LocationsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.PersonDTO[] People
        {
            get
            {
                return this.PeopleField;
            }
            set
            {
                this.PeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.WeatherDTO Weather
        {
            get
            {
                return this.WeatherField;
            }
            set
            {
                this.WeatherField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDTO", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.DTO", IsReference=true)]
    public partial class PersonDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<short> AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private MyPhotos.DTO.MultimediaDTO MultimediaField;
        
        private int MultimediaIdField;
        
        private MyPhotos.DTO.PhotoDTO PhotoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                this.AgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.MultimediaDTO Multimedia
        {
            get
            {
                return this.MultimediaField;
            }
            set
            {
                this.MultimediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MultimediaId
        {
            get
            {
                return this.MultimediaIdField;
            }
            set
            {
                this.MultimediaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.PhotoDTO Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherDTO", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.DTO")]
    public enum WeatherDTO : byte
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunny = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cloudy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartlyCloudy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rainy = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Snowy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sleeting = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stormy = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lightning = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thunderous = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hailing = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windy = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Foggy = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Icy = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoDTO", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos.DTO", IsReference=true)]
    public partial class PhotoDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int HeightField;
        
        private int IdField;
        
        private MyPhotos.DTO.PersonDTO PersonField;
        
        private int WidthField;
        
        private int XField;
        
        private int YField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotos.DTO.PersonDTO Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                this.WidthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X
        {
            get
            {
                return this.XField;
            }
            set
            {
                this.XField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y
        {
            get
            {
                return this.YField;
            }
            set
            {
                this.YField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMyPhotosService")]
public interface IMyPhotosService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/GetLocationById", ReplyAction="http://tempuri.org/ILocation/GetLocationByIdResponse")]
    MyPhotos.DTO.LocationDTO GetLocationById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/GetLocationById", ReplyAction="http://tempuri.org/ILocation/GetLocationByIdResponse")]
    System.Threading.Tasks.Task<MyPhotos.DTO.LocationDTO> GetLocationByIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/AddLocation", ReplyAction="http://tempuri.org/ILocation/AddLocationResponse")]
    bool AddLocation(int multimediaId, MyPhotos.DTO.LocationDTO locationDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/AddLocation", ReplyAction="http://tempuri.org/ILocation/AddLocationResponse")]
    System.Threading.Tasks.Task<bool> AddLocationAsync(int multimediaId, MyPhotos.DTO.LocationDTO locationDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/UpdateLocation", ReplyAction="http://tempuri.org/ILocation/UpdateLocationResponse")]
    bool UpdateLocation(MyPhotos.DTO.LocationDTO locationDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/UpdateLocation", ReplyAction="http://tempuri.org/ILocation/UpdateLocationResponse")]
    System.Threading.Tasks.Task<bool> UpdateLocationAsync(MyPhotos.DTO.LocationDTO locationDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/RemoveLocations", ReplyAction="http://tempuri.org/ILocation/RemoveLocationsResponse")]
    void RemoveLocations(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocation/RemoveLocations", ReplyAction="http://tempuri.org/ILocation/RemoveLocationsResponse")]
    System.Threading.Tasks.Task RemoveLocationsAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/RemovePeople", ReplyAction="http://tempuri.org/IPerson/RemovePeopleResponse")]
    void RemovePeople(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/RemovePeople", ReplyAction="http://tempuri.org/IPerson/RemovePeopleResponse")]
    System.Threading.Tasks.Task RemovePeopleAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPerson", ReplyAction="http://tempuri.org/IPerson/AddPersonResponse")]
    bool AddPerson(int multimediaId, MyPhotos.DTO.PersonDTO personDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPerson", ReplyAction="http://tempuri.org/IPerson/AddPersonResponse")]
    System.Threading.Tasks.Task<bool> AddPersonAsync(int multimediaId, MyPhotos.DTO.PersonDTO personDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/UpdatePerson", ReplyAction="http://tempuri.org/IPerson/UpdatePersonResponse")]
    bool UpdatePerson(MyPhotos.DTO.PersonDTO personDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/UpdatePerson", ReplyAction="http://tempuri.org/IPerson/UpdatePersonResponse")]
    System.Threading.Tasks.Task<bool> UpdatePersonAsync(MyPhotos.DTO.PersonDTO personDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/AddMultimedia", ReplyAction="http://tempuri.org/IMultimedia/AddMultimediaResponse")]
    void AddMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/AddMultimedia", ReplyAction="http://tempuri.org/IMultimedia/AddMultimediaResponse")]
    System.Threading.Tasks.Task AddMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/GetMultimediaById", ReplyAction="http://tempuri.org/IMultimedia/GetMultimediaByIdResponse")]
    MyPhotos.DTO.MultimediaDTO GetMultimediaById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/GetMultimediaById", ReplyAction="http://tempuri.org/IMultimedia/GetMultimediaByIdResponse")]
    System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO> GetMultimediaByIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/GetEveryMultimedia", ReplyAction="http://tempuri.org/IMultimedia/GetEveryMultimediaResponse")]
    MyPhotos.DTO.MultimediaDTO[] GetEveryMultimedia();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/GetEveryMultimedia", ReplyAction="http://tempuri.org/IMultimedia/GetEveryMultimediaResponse")]
    System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO[]> GetEveryMultimediaAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/UpdateMultimedia", ReplyAction="http://tempuri.org/IMultimedia/UpdateMultimediaResponse")]
    MyPhotos.DTO.MultimediaDTO UpdateMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/UpdateMultimedia", ReplyAction="http://tempuri.org/IMultimedia/UpdateMultimediaResponse")]
    System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO> UpdateMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/FlagMultimediaAsDeleted", ReplyAction="http://tempuri.org/IMultimedia/FlagMultimediaAsDeletedResponse")]
    void FlagMultimediaAsDeleted(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/FlagMultimediaAsDeleted", ReplyAction="http://tempuri.org/IMultimedia/FlagMultimediaAsDeletedResponse")]
    System.Threading.Tasks.Task FlagMultimediaAsDeletedAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/UpdateWholeMultimedia", ReplyAction="http://tempuri.org/IMultimedia/UpdateWholeMultimediaResponse")]
    void UpdateWholeMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultimedia/UpdateWholeMultimedia", ReplyAction="http://tempuri.org/IMultimedia/UpdateWholeMultimediaResponse")]
    System.Threading.Tasks.Task UpdateWholeMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMyPhotosServiceChannel : IMyPhotosService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MyPhotosServiceClient : System.ServiceModel.ClientBase<IMyPhotosService>, IMyPhotosService
{
    
    public MyPhotosServiceClient()
    {
    }
    
    public MyPhotosServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MyPhotosServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyPhotosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyPhotosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public MyPhotos.DTO.LocationDTO GetLocationById(int id)
    {
        return base.Channel.GetLocationById(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.DTO.LocationDTO> GetLocationByIdAsync(int id)
    {
        return base.Channel.GetLocationByIdAsync(id);
    }
    
    public bool AddLocation(int multimediaId, MyPhotos.DTO.LocationDTO locationDTO)
    {
        return base.Channel.AddLocation(multimediaId, locationDTO);
    }
    
    public System.Threading.Tasks.Task<bool> AddLocationAsync(int multimediaId, MyPhotos.DTO.LocationDTO locationDTO)
    {
        return base.Channel.AddLocationAsync(multimediaId, locationDTO);
    }
    
    public bool UpdateLocation(MyPhotos.DTO.LocationDTO locationDTO)
    {
        return base.Channel.UpdateLocation(locationDTO);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateLocationAsync(MyPhotos.DTO.LocationDTO locationDTO)
    {
        return base.Channel.UpdateLocationAsync(locationDTO);
    }
    
    public void RemoveLocations(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        base.Channel.RemoveLocations(multimediaDTO);
    }
    
    public System.Threading.Tasks.Task RemoveLocationsAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.RemoveLocationsAsync(multimediaDTO);
    }
    
    public void RemovePeople(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        base.Channel.RemovePeople(multimediaDTO);
    }
    
    public System.Threading.Tasks.Task RemovePeopleAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.RemovePeopleAsync(multimediaDTO);
    }
    
    public bool AddPerson(int multimediaId, MyPhotos.DTO.PersonDTO personDTO)
    {
        return base.Channel.AddPerson(multimediaId, personDTO);
    }
    
    public System.Threading.Tasks.Task<bool> AddPersonAsync(int multimediaId, MyPhotos.DTO.PersonDTO personDTO)
    {
        return base.Channel.AddPersonAsync(multimediaId, personDTO);
    }
    
    public bool UpdatePerson(MyPhotos.DTO.PersonDTO personDTO)
    {
        return base.Channel.UpdatePerson(personDTO);
    }
    
    public System.Threading.Tasks.Task<bool> UpdatePersonAsync(MyPhotos.DTO.PersonDTO personDTO)
    {
        return base.Channel.UpdatePersonAsync(personDTO);
    }
    
    public void AddMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        base.Channel.AddMultimedia(multimediaDTO);
    }
    
    public System.Threading.Tasks.Task AddMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.AddMultimediaAsync(multimediaDTO);
    }
    
    public MyPhotos.DTO.MultimediaDTO GetMultimediaById(int id)
    {
        return base.Channel.GetMultimediaById(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO> GetMultimediaByIdAsync(int id)
    {
        return base.Channel.GetMultimediaByIdAsync(id);
    }
    
    public MyPhotos.DTO.MultimediaDTO[] GetEveryMultimedia()
    {
        return base.Channel.GetEveryMultimedia();
    }
    
    public System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO[]> GetEveryMultimediaAsync()
    {
        return base.Channel.GetEveryMultimediaAsync();
    }
    
    public MyPhotos.DTO.MultimediaDTO UpdateMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.UpdateMultimedia(multimediaDTO);
    }
    
    public System.Threading.Tasks.Task<MyPhotos.DTO.MultimediaDTO> UpdateMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.UpdateMultimediaAsync(multimediaDTO);
    }
    
    public void FlagMultimediaAsDeleted(int id)
    {
        base.Channel.FlagMultimediaAsDeleted(id);
    }
    
    public System.Threading.Tasks.Task FlagMultimediaAsDeletedAsync(int id)
    {
        return base.Channel.FlagMultimediaAsDeletedAsync(id);
    }
    
    public void UpdateWholeMultimedia(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        base.Channel.UpdateWholeMultimedia(multimediaDTO);
    }
    
    public System.Threading.Tasks.Task UpdateWholeMultimediaAsync(MyPhotos.DTO.MultimediaDTO multimediaDTO)
    {
        return base.Channel.UpdateWholeMultimediaAsync(multimediaDTO);
    }
}
